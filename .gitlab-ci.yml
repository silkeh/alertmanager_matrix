---
include:
  - project: silkeh/pipelines
    ref: initial-pipelines
    file:
      - golang.gitlab-ci.yml

variables:
  PACKAGE_REGISTRY_URL:
    ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/alertmanager_matrix
  CGO_ENABLED: 0

build:
  stage: build
  needs: []
  parallel:
    matrix:
      - GOOS: darwin
        GOARCH: [amd64, arm64]
      - GOOS: freebsd
        GOARCH: [386, amd64, arm]
      - GOOS: linux
        GOARCH: [386, amd64, arm, arm64, ppc64, ppc64le,
                 mips, mipsle, mips64, mips64le, riscv64, s390x]
      - GOOS: openbsd
        GOARCH: [386, amd64, arm, arm64]
      - GOOS: windows
        GOARCH: [386, amd64, arm, arm64]
  script:
    - go build -ldflags="-s -w" ./cmd/alertmanager_matrix
    - tar -cavf alertmanager_matrix-$GOOS-$GOARCH.tar.gz ./alertmanager_matrix*
  artifacts:
    name: alertmanager_matrix-$GOOS-$GOARCH
    paths:
      - "*.tar.gz"

sources:
  stage: build
  needs: []
  script:
    - go mod vendor
    - tar --exclude-from=.gitignore -caf sources.tar.gz *
  artifacts:
    paths:
      - sources.tar.gz

package rpm:
  stage: build
  needs: [sources]
  image: fedora
  script:
    - dnf -q -y --setopt=install_weak_deps=False install git golang fedora-packager rpmdevtools
    - make rpm
  artifacts:
    paths:
      - "*.rpm"
      - "**/*.rpm"

release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - apk add curl
    - |
      set -x
      args=""
      for i in *.tar.gz *.rpm **/*.rpm; do
        url="${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/$(basename "$i")"
        args="${args} --assets-link {\"name\":\"$i\",\"url\":\"${url}\"}"
        curl -sSf --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "$i" "${url}" || exit 1
      done
      release-cli create \
        --name "Alertmanager Matrix $CI_COMMIT_TAG" \
        --tag-name "$CI_COMMIT_TAG" \
        $args
  rules:
    - if: $CI_COMMIT_TAG
